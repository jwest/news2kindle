<?php
/**
 * Send articles to kindle
 * 3 states:
 *   - grab articles
 *   - preapre mobi format
 *   - send to kindle via email
 *
 * @author Jakub Westfalewski <jwest@jwest.pl>
 */ 

require 'lib/utils.php';
require 'lib/io.php';
require 'lib/api.php';
require 'lib/images.php';
require 'lib/storage.php';
require 'lib/readability.php';

IO::msg('News2Kindle - v.0.1');
IO::msg('--------------------------------------------');
IO::msg('https://github.com/jwest/news2kindle');
IO::msg('');

/*
 * STATE 0 - Prepare objects
 * ----------------------------------
 */

IO::prepare_args($argv); //preapre args

/*
 * STATE 1 - Grab yours articles
 * ----------------------------------
 */
try
{
    $storage = new Storage('static');

    IO::command('Login to Google Reader API');
    $api = new API(IO::arg('login'), IO::arg('password'));
    IO::ok();

    IO::command('Get ' . IO::arg('maxitems') . ' items from reader');
    $items = $api->get_unread( IO::arg('maxitems') )->items;
    IO::ok();

    IO::msg('Start conversion for ' . count($items) . ' items:');

    //prepare articles
    foreach ( $items as $i => $item )
    {
        IO::command( ($i+1) . '. item convert');

        $file_url_content = @file_get_contents($item->alternate[0]->href);

        $ra = new Readability2($file_url_content, 'utf-8');
        $content = $ra->getContent();

        $images = new Images($storage, $content['content']);
        $content = $images->convert();

        //save article
        $storage->add_content
        (
            Utils::prepare_id($item->id), 
            mb_convert_encoding($item->title, 'HTML-ENTITIES', 'utf-8'), 
            $content, 
            $item->alternate[0]->href, 
            $item->origin
        );

        IO::ok();
    }
}
catch(AutentificationException $e)
{
    IO::error( $e->getMessage() );
}
catch(Exception $e)
{
    IO::error( $e->getMessage() );
}

/*
 * STATE 2 - Prepare mobi from html
 * ----------------------------------
 */


/*
 * STATE 3 - Send by email to Kindle
 * ----------------------------------
 */


IO::msg('');
IO::msg('');